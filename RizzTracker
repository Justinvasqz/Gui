import tkinter as tk
from tkinter import messagebox

class RizzTracker:
    def __init__(self, root):
        self.root = root
        self.root.title("Rizz Tracker")

        # Setting up the layout
        tk.Label(root, text="Date:").grid(row=0, column=0)
        tk.Label(root, text="Event Name:").grid(row=1, column=0)
        tk.Label(root, text="Rizz Rating (1-10):").grid(row=2, column=0)
        tk.Label(root, text="Notes:").grid(row=3, column=0)

        # Entries for input
        self.date_entry = tk.Entry(root)
        self.event_entry = tk.Entry(root)
        self.rating_entry = tk.Entry(root)
        self.notes_entry = tk.Entry(root)

        self.date_entry.grid(row=0, column=1)
        self.event_entry.grid(row=1, column=1)
        self.rating_entry.grid(row=2, column=1)
        self.notes_entry.grid(row=3, column=1)

        # Buttons for commands
        tk.Button(root, text="Add Entry", command=self.add_entry).grid(row=4, column=0)
        tk.Button(root, text="Show Entries", command=self.show_entries).grid(row=4, column=1)

        # Text display area
        self.text_area = tk.Text(root, height=10, width=50)
        self.text_area.grid(row=5, column=0, columnspan=2)

        # Internal storage
        self.entries = []

    def add_entry(self):
        # Gather data from entries
        date = self.date_entry.get()
        event = self.event_entry.get()
        rating = self.rating_entry.get()
        notes = self.notes_entry.get()

        if not (date and event and rating and notes):
            messagebox.showerror("Error", "All fields must be filled out")
            return

        # Store in list
        entry = f"Date: {date}, Event: {event}, Rating: {rating}, Notes: {notes}"
        self.entries.append(entry)

        # Clear input fields
        self.date_entry.delete(0, tk.END)
        self.event_entry.delete(0, tk.END)
        self.rating_entry.delete(0, tk.END)
        self.notes_entry.delete(0, tk.END)

        messagebox.showinfo("Added", "Entry added successfully")

    def show_entries(self):
        self.text_area.delete(1.0, tk.END)
        for entry in self.entries:
            self.text_area.insert(tk.END, entry + '\n')

if __name__ == "__main__":
    root = tk.Tk()
    app = RizzTracker(root)
    root.mainloop()
